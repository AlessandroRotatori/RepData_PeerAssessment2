g <- g + theme(plot.title = element_text(hjust = 0.5))
g <- g + stat_bin(binwidth = 30)
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..))
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Sum of Daily Steps", y = "Count")
g <- g + labs(title = "Distribution of daily sum of steps")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5))
g <- g + stat_bin(binwidth = 500)
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), stat_bin(binwidth = 50))
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 30)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Sum of Daily Steps", y = "Count")
g <- g + labs(title = "Distribution of daily sum of steps")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5))
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 500)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Sum of Daily Steps", y = "Count")
g <- g + labs(title = "Distribution of daily sum of steps")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5))
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Sum of Daily Steps", y = "Count")
g <- g + labs(title = "Distribution of daily sum of steps")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5))
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps in a Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps in a day")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5))
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5))
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Average number of steps (5-min interval)", y = "Mean of number of steps")
g <- g + labs(title = "Average of number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Average number of steps (5-min interval)", y = "Mean of number of steps")
g <- g + labs(title = "Day time 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 3")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps_adj$tot_steps)
median(tot_steps_adj$tot_steps)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps_adj, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 3")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps_adj$tot_steps)
median(tot_steps_adj$tot_steps)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps_adj, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 3")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps_adj$tot_steps)
median(tot_steps_adj$tot_steps)
library(dplyr)
library(ggplot2)
i <- 0
days <- vector(mode = "character", length(data$date))
for (i in 1:length(data$date)){
if(weekdays(data$time[i])=="Saturday"|weekdays(data$time[i])=="Sunday"){
days[i] <- "weekend"
}
else days[i] <- "weekday"
}
data <- mutate(data, day_type = days)
av_int_steps_bt <- data %>%
group_by(interval, day_type) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps_bt, aes(x = interval, y = mean))
g <- g + facet_grid(day_type ~ .)
g <- g + labs(x = "Number of steps (5-min interval)", y = "Average Number of steps")
g <- g + labs(title = "Average Number of steps for 5-minutes weekday vs weekend")
g <- g + labs(caption = "Figure 4")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Average number of steps (5-min interval)", y = "Mean of number of steps")
g <- g + labs(title = "Day time 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Average number of steps (5-min interval)", y = "Mean of number of steps")
g <- g + labs(title = "Day in 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(ggplot2)
i <- 0
days <- vector(mode = "character", length(data$date))
for (i in 1:length(data$date)){
if(weekdays(data$time[i])=="Saturday"|weekdays(data$time[i])=="Sunday"){
days[i] <- "weekend"
}
else days[i] <- "weekday"
}
data <- mutate(data, day_type = days)
av_int_steps_bt <- data %>%
group_by(interval, day_type) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps_bt, aes(x = interval, y = mean))
g <- g + facet_grid(day_type ~ .)
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 4")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
View(tot_steps_adj)
View(av_int_steps_bt)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ",")
library(dplyr)
library(lubridate)
data <- mutate(.data = data, time = ymd_hm(paste(date, sprintf(fmt = "%04d", interval),sep = " ")))
library(dplyr)
tot_steps <- data %>%
group_by(date) %>%
summarize(tot_steps = sum(steps, na.rm = TRUE))
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps$tot_steps)
median(tot_steps$tot_steps)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
sum(is.na(data$steps))
i <- 0
adj_steps <- numeric(length = length(data$steps))
for(i in 1:length(data$steps)){
if(is.na(data$steps[i])){
adj_steps[i] <- av_int_steps$mean[which(av_int_steps$interval == data$interval[i])]
}
else adj_steps[i] <- data$steps[i]
}
library(dplyr)
data_adj <- data
data_adj$steps <- adj_steps
tot_steps_adj <- data_adj %>%
group_by(date) %>%
summarize(tot_steps = sum(steps, na.rm = TRUE))
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps_adj, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 3")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps_adj$tot_steps)
median(tot_steps_adj$tot_steps)
library(dplyr)
library(ggplot2)
i <- 0
days <- vector(mode = "character", length(data$date))
for (i in 1:length(data$date)){
if(weekdays(data$time[i])=="Saturday"|weekdays(data$time[i])=="Sunday"){
days[i] <- "weekend"
}
else days[i] <- "weekday"
}
data <- mutate(data, day_type = days)
av_int_steps_bt <- data %>%
group_by(interval, day_type) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps_bt, aes(x = interval, y = mean))
g <- g + facet_grid(day_type ~ .)
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 4")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ",")
library(dplyr)
library(lubridate)
data <- mutate(.data = data, time = ymd_hm(paste(date, sprintf(fmt = "%04d", interval),sep = " ")))
library(dplyr)
tot_steps <- data %>%
group_by(date) %>%
summarize(tot_steps = sum(steps, na.rm = TRUE))
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps$tot_steps)
median(tot_steps$tot_steps)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
sum(is.na(data$steps))
i <- 0
adj_steps <- numeric(length = length(data$steps))
for(i in 1:length(data$steps)){
if(is.na(data$steps[i])){
adj_steps[i] <- av_int_steps$mean[which(av_int_steps$interval == data$interval[i])]
}
else adj_steps[i] <- data$steps[i]
}
library(dplyr)
data_adj <- data
data_adj$steps <- adj_steps
tot_steps_adj <- data_adj %>%
group_by(date) %>%
summarize(tot_steps = sum(steps, na.rm = TRUE))
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps_adj, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 3")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps_adj$tot_steps)
median(tot_steps_adj$tot_steps)
library(dplyr)
library(ggplot2)
i <- 0
days <- vector(mode = "character", length(data$date))
for (i in 1:length(data$date)){
if(weekdays(data$time[i])=="Saturday"|weekdays(data$time[i])=="Sunday"){
days[i] <- "weekend"
}
else days[i] <- "weekday"
}
data <- mutate(data, day_type = days)
av_int_steps_bt <- data %>%
group_by(interval, day_type) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps_bt, aes(x = interval, y = mean))
g <- g + facet_grid(day_type ~ .)
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 4")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(dplyr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(lubridate)
library(ggplot2)
data <- read.csv("activity.csv", header = TRUE, sep = ",")
library(dplyr)
library(lubridate)
data <- mutate(.data = data, time = ymd_hm(paste(date, sprintf(fmt = "%04d", interval),sep = " ")))
library(dplyr)
tot_steps <- data %>%
group_by(date) %>%
summarize(tot_steps = sum(steps, na.rm = TRUE))
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps$tot_steps)
median(tot_steps$tot_steps)
library(dplyr)
library(ggplot2)
av_int_steps <- data %>%
group_by(interval) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps, aes(x = interval, y = mean))
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 2")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
sum(is.na(data$steps))
i <- 0
adj_steps <- numeric(length = length(data$steps))
for(i in 1:length(data$steps)){
if(is.na(data$steps[i])){
adj_steps[i] <- av_int_steps$mean[which(av_int_steps$interval == data$interval[i])]
}
else adj_steps[i] <- data$steps[i]
}
library(dplyr)
data_adj <- data
data_adj$steps <- adj_steps
tot_steps_adj <- data_adj %>%
group_by(date) %>%
summarize(tot_steps = sum(steps, na.rm = TRUE))
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps_adj, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 3")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
mean(tot_steps_adj$tot_steps)
median(tot_steps_adj$tot_steps)
library(dplyr)
library(ggplot2)
i <- 0
days <- vector(mode = "character", length(data$date))
for (i in 1:length(data$date)){
if(weekdays(data$time[i])=="Saturday"|weekdays(data$time[i])=="Sunday"){
days[i] <- "weekend"
}
else days[i] <- "weekday"
}
data <- mutate(data, day_type = days)
av_int_steps_bt <- data %>%
group_by(interval, day_type) %>%
summarize(mean = mean(steps, na.rm = TRUE))
g <- ggplot()
g <- g + geom_line(data = av_int_steps_bt, aes(x = interval, y = mean))
g <- g + facet_grid(day_type ~ .)
g <- g + labs(x = "Day time 5-minutes intervals", y = "Average number of steps")
g <- g + labs(title = "Average number of steps for 5-minutes intervals")
g <- g + labs(caption = "Figure 4")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
library(ggplot2)
g <- ggplot()
g <- g + geom_histogram(data = tot_steps, aes(tot_steps, fill= ..count..), binwidth = 1000)
g <- g + theme_bw(base_family="Avenir")
g <- g + labs(x = "Total number of steps per Day", y = "Count")
g <- g + labs(title = "Distribution of total number of steps per day")
g <- g + labs(caption = "Figure 1")
g <- g + theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5))
print(g)
setwd("/Users/rotatori/Documents/GitHub/RepData_PeerAssessment2")
download.file(url ="https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2",
destfile = "repdata_data_StormData.csv.bz2", method = "libcurl")
library(dplyr)
library(lubridate)
storm.data.raw <- read.csv2(file = "repdata_data_StormData.csv.bz2", header = TRUE, sep = ",")
## SELECT THE RELEVANT VARIABLES ##
storm.data.filter.raw <- storm.data.raw  %>%
select(BGN_DATE, STATE, EVTYPE,
FATALITIES, INJURIES,
PROPDMG, PROPDMGEXP,
CROPDMG, CROPDMGEXP)
## VARIABLES TRANSFORMATION
storm.data <- storm.data.filter.raw %>%
mutate(
BGN_DATE = mdy_hms(BGN_DATE),
FATALITIES = as.numeric(FATALITIES),
INJURIES = as.numeric(INJURIES),
PROPDMG = as.numeric(PROPDMG),
CROPDMG = as.numeric(CROPDMG)
)
## HANDLING OF VARIABLE EVTYPE ##
str(unique(storm.data$EVTYPE))
str(unique(trimws(storm.data$EVTYPE)))
storm.data <- storm.data.filter.raw %>%
mutate(
BGN_DATE = mdy_hms(BGN_DATE),
FATALITIES = as.numeric(FATALITIES),
INJURIES = as.numeric(INJURIES),
PROPDMG = as.numeric(PROPDMG),
CROPDMG = as.numeric(CROPDMG),
STATE = as.character(STATE),
EVTYPE = as.character(EVTYPE)
)
str(storm.data)
str(unique(storm.data$EVTYPE))
str(unique(trimws(storm.data$EVTYPE)))
unique(trimws(storm.data$EVTYPE))
unique(trimws(str_to_lower(storm.data$EVTYPE)))
library(stringr)
unique(trimws(str_to_lower(storm.data$EVTYPE)))
str(unique(trimws(str_to_lower(storm.data$EVTYPE))))
View(storm.data.filter.raw)
View(storm.data.raw)
View(storm.data.raw)
